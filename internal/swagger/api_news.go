/*
 * News Manager
 *
 * UPDAY: frontend task. This service should provide a basic rest API to be used in the upday frontend task.
 *
 * API version: 0.0.1
 * Contact: thun@upday.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"net/http"

	"github.com/gorilla/mux"
	"upday.com/upday-task-fe/internal/control"
	"upday.com/upday-task-fe/pkg/model"
)

var newsControl = control.NewNewsControl()

func AddNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "AddNews", func() (interface{}, error) {
		news := model.News{}
		err := json.NewDecoder(r.Body).Decode(&news)
		if err != nil {
			return nil, err
		}
		return newsControl.Add(news)
	})
}

func ArchiveNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "ArchiveNews", func() (interface{}, error) {
		vars := mux.Vars(r)
		newsId := vars["newsId"]

		err := newsControl.ToArchive(newsId)
		return nil, err
	})
}

func DeleteNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "DeleteNews", func() (interface{}, error) {
		vars := mux.Vars(r)
		newsId := vars["newsId"]

		err := newsControl.Delete(newsId)
		return nil, err
	})
}

func DrarftNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "DrarftNews", func() (interface{}, error) {
		vars := mux.Vars(r)
		newsId := vars["newsId"]

		err := newsControl.ToDraft(newsId)
		return nil, err
	})
}

func FindNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "FindNews", func() (interface{}, error) {
		vars := mux.Vars(r)
		newsId := vars["newsId"]

		return newsControl.Find(newsId)
	})
}

func PublishNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "PublishNews", func() (interface{}, error) {
		vars := mux.Vars(r)
		newsId := vars["newsId"]

		err := newsControl.ToPublished(newsId)
		return nil, err
	})
}

func UpdateNews(w http.ResponseWriter, r *http.Request) {
	handle(w, r, "UpdateNews", func() (interface{}, error) {
		news := model.News{}
		err := json.NewDecoder(r.Body).Decode(&news)
		if err != nil {
			return nil, err
		}
		return newsControl.Update(news)
	})
}
