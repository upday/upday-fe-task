/*
 * News Manager
 *
 * UPDAY: frontend task. This service should provide a basic rest API to be used in the upday frontend task.
 *
 * API version: 0.0.1
 * Contact: thun@upday.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method, "OPTIONS").
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Upday CMS!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v1/",
		Index,
	},

	Route{
		"GetAllCountries",
		strings.ToUpper("Get"),
		"/v1/board",
		GetAllCountries,
	},

	Route{
		"GetNewsFromBoard",
		strings.ToUpper("Get"),
		"/v1/board/{boardId}/news",
		GetNewsFromBoard,
	},

	Route{
		"AddNews",
		strings.ToUpper("Post"),
		"/v1/news",
		AddNews,
	},

	Route{
		"ArchiveNews",
		strings.ToUpper("Post"),
		"/v1/news/{newsId}/archive",
		ArchiveNews,
	},

	Route{
		"DeleteNews",
		strings.ToUpper("Delete"),
		"/v1/news/{newsId}",
		DeleteNews,
	},

	Route{
		"DrarftNews",
		strings.ToUpper("Post"),
		"/v1/news/{newsId}/draft",
		DrarftNews,
	},

	Route{
		"FindNews",
		strings.ToUpper("Get"),
		"/v1/news/{newsId}",
		FindNews,
	},

	Route{
		"PublishNews",
		strings.ToUpper("Post"),
		"/v1/news/{newsId}/published",
		PublishNews,
	},

	Route{
		"UpdateNews",
		strings.ToUpper("Put"),
		"/v1/news",
		UpdateNews,
	},
}
